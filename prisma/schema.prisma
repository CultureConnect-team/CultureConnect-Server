generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  name        String
  email       String       @unique
  password    String
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt

  userProfile UserProfile?
  userPreference UserPreference?
  savedDestinations SavedDestination[]
}

model UserProfile {
  id          String   @id @default(cuid())
  userId      String   @unique
  profilePic  String?
  bio         String?
  gender      String?
  age         Int?
  province    String?
  city        String?
  district    String?
  village     String?
  address     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserPreference {
  id                  String   @id @default(cuid())
  userId              String
  culinaryPreference  Json?
  culturePreference   Json?
  groupPreference     String?
  transportPreference String?
  travelFrequency     String?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  @@unique([userId])
}


model Destination {
  id          String   @id @default(cuid())
  name        String
  description String
  location    String
  imageUrl    String
  createdAt   DateTime @default(now())
  category    String
  rating      Float
  coordinate  Json?

  savedBy SavedDestination[]
}

model SavedDestination {
  id            Int      @id @default(autoincrement())
  userId        String
  destinationId String
  createdAt     DateTime @default(now())

  user        User        @relation(fields: [userId], references: [id]) 
  destination Destination @relation(fields: [destinationId], references: [id])

  @@unique([userId, destinationId])
}
